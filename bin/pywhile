#!/usr/local/bin/python3
import argparse
from sys import stdin
import subprocess as sp
from multiprocessing import Pool

EXAMPLE = """
ex)
    ls | pywhile rm
    ls | pywhile rm -r
    ls | pywhile "python script.py #f"
    ls | pywhile "python script.py #f" -p 2
"""


def gen_command(command, line):
    if "#f" in command:
        command = command.replace('#f', line.strip(), -1)
    else:
        command = command + ' ' + line.strip()
    # com: str -> list
    command = command.split()
    return command


def run(command):
    if not QUIET:
        print(' '.join(command))
    sp.run(command)


def main(command):
    if PROCESSES == 1:
        for line in stdin.readlines():
            run(gen_command(command, line))
    else:
        commands = [gen_command(command, line) for line in stdin.readlines()]
        with Pool(processes=PROCESSES) as pool:
            pool.map(run, commands)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="run command + input",
    )
    parser.add_argument('command')
    parser.add_argument(
        '-q', '--quiet', action='store_true',
        help='do not display command'
    )
    parser.add_argument(
        '-p', '--processes', type=int,
        default=1,
        help='process number when parallel execution'
    )
    args = parser.parse_args()

    PROCESSES = args.processes
    QUIET = args.quiet

    main(args.command)
