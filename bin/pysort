#!/usr/local/bin/python3
import argparse
from sys import stdin


def main():
    data = [ row.strip().split() for row in stdin.readlines() ]
    if KEY == -100:
        if NUMBER:
            data[:] = [ [float(elm) for elm in row] for row in data ]
            tmp = sorted(data, reverse=REVERSE)
            if INT:
                tmp[:] = [ [int(elm) for elm in row] for row in tmp]
            tmp[:] = [ [str(elm) for elm in row] for row in tmp ]
        else:
            tmp = sorted(data, reverse=REVERSE)

        for row in tmp:
            print(' '.join(row))

    else:
        if NUMBER:
            tmp = eval('sorted(data, key=lambda x: (float(x[{}])), reverse=REVERSE)'.format(KEY))
        else:
            tmp = eval('sorted(data, key=lambda x: (x[{}]), reverse=REVERSE)'.format(KEY))

        for row in tmp:
            print(' '.join(row))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="標準入力をsortする",
    )
    parser.add_argument(
        '-k', '--key', type=int, default=-100,
        help='int 列目をkeyにしてsortする'
    )
    parser.add_argument(
        '-n', '--number', action='store_true',
        help='数字によりsortする'
    )
    parser.add_argument(
        '-i', '--int', action='store_true',
        help='intに変換する'
    )
    parser.add_argument(
        '-r', '--reverse', action='store_true',
        help='降順にsortする'
    )
    args = parser.parse_args()

    KEY = args.key
    NUMBER = args.number
    INT = args.int
    REVERSE = args.reverse

    main()
