#!/usr/local/bin/python3
import argparse
from sys import stdin
from collections import Counter
import matplotlib.pyplot as plt


def main():
    data = [list(map(float, row.split())) for row in stdin.readlines()]
    X = [d[0] for d in data]
    Y = [d[1] for d in data]
    fig, ax = plt.subplots()
    ax.scatter(X, Y, marker=MARKER)
    ax.set_title(TITLE)
    ax.set_xlabel(XLABEL)
    ax.set_ylabel(YLABEL)
    ax.set_xscale(XSCALE)
    ax.set_yscale(YSCALE)
    if GRID:
        ax.grid('--')
    if SAVENAME is not None:
        fig.savefig(SAVENAME)
    else:
        plt.show()


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='create scatter'
    )
    parser.add_argument(
        '--xlabel',
        default=None
    )
    parser.add_argument(
        '--ylabel',
        default=None
    )
    parser.add_argument(
        '--title',
        default=None
    )
    parser.add_argument(
        '--xscale',
        choices=['linear', 'log'],
        default='linear'
    )
    parser.add_argument(
        '--yscale',
        choices=['linear', 'log'],
        default='linear'
    )
    parser.add_argument(
        '-m', '--marker',
        default='o'
    )
    parser.add_argument(
        '-g', '--grid', action='store_true'
    )
    parser.add_argument(
        '--savename',
        default=None
    )
    args = parser.parse_args()

    TITLE    = args.title
    XLABEL   = args.xlabel
    YLABEL   = args.ylabel
    XSCALE   = args.xscale
    YSCALE   = args.yscale
    MARKER   = args.marker
    GRID     = args.grid
    SAVENAME = args.savename

    main()
